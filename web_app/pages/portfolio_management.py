"""
üìÅ PORTFOLIO MANAGEMENT PAGE - Trang qu·∫£n l√Ω danh m·ª•c
==================================================

Trang n√†y cho ph√©p ng∆∞·ªùi d√πng t·∫°o, s·ª≠a, x√≥a c√°c danh m·ª•c c·ªï phi·∫øu
"""

import streamlit as st
import sys
import os

# Add project root to path
project_root = os.path.dirname(os.path.dirname(os.path.dirname(__file__)))
sys.path.append(project_root)

def render_portfolio_management():
    """
    Render trang qu·∫£n l√Ω danh m·ª•c
    """
    st.markdown("# üìÅ Qu·∫£n l√Ω danh m·ª•c c·ªï phi·∫øu")
    
    try:
        from src.utils.portfolio_manager import PortfolioManager
        
        # Initialize portfolio manager
        portfolio_manager = PortfolioManager()
        
        # Tabs for different operations
        tab1, tab2, tab3, tab4 = st.tabs(["üìã Xem danh m·ª•c", "‚ûï Th√™m danh m·ª•c", "‚úèÔ∏è S·ª≠a danh m·ª•c", "üóëÔ∏è X√≥a danh m·ª•c"])
        
        with tab1:
            st.subheader("üìã Danh s√°ch c√°c danh m·ª•c hi·ªán c√≥")
            
            portfolios = portfolio_manager.get_portfolios()
            
            if not portfolios:
                st.info("üìù Ch∆∞a c√≥ danh m·ª•c n√†o. H√£y t·∫°o danh m·ª•c ƒë·∫ßu ti√™n!")
            else:
                for portfolio_name, stocks in portfolios.items():
                    with st.expander(f"üìÇ {portfolio_name} ({len(stocks)} c·ªï phi·∫øu)", expanded=False):
                        st.write("**Danh s√°ch c·ªï phi·∫øu:**")
                        
                        # Hi·ªÉn th·ªã d∆∞·ªõi d·∫°ng c·ªôt ƒë·ªÉ d·ªÖ ƒë·ªçc
                        cols = st.columns(5)
                        for i, stock in enumerate(sorted(stocks)):
                            with cols[i % 5]:
                                st.write(f"‚Ä¢ {stock}")
                        
                        # Th√™m/x√≥a c·ªï phi·∫øu nhanh
                        st.markdown("---")
                        col1, col2 = st.columns(2)
                        
                        with col1:
                            new_stock = st.text_input(f"Th√™m c·ªï phi·∫øu v√†o {portfolio_name}:", key=f"add_{portfolio_name}")
                            if st.button(f"‚ûï Th√™m", key=f"btn_add_{portfolio_name}"):
                                if new_stock:
                                    portfolio_manager.add_stock_to_portfolio(portfolio_name, new_stock)
                                    st.rerun()
                        
                        with col2:
                            if stocks:
                                remove_stock = st.selectbox(f"X√≥a c·ªï phi·∫øu kh·ªèi {portfolio_name}:", 
                                                          [""] + sorted(stocks), key=f"remove_{portfolio_name}")
                                if st.button(f"üóëÔ∏è X√≥a", key=f"btn_remove_{portfolio_name}"):
                                    if remove_stock:
                                        portfolio_manager.remove_stock_from_portfolio(portfolio_name, remove_stock)
                                        st.rerun()
        
        with tab2:
            st.subheader("üìà Th√™m danh m·ª•c m·ªõi")
            
            with st.form("add_portfolio_form"):
                portfolio_name = st.text_input("T√™n danh m·ª•c:", placeholder="VD: C·ªï phi·∫øu nh·ªè")
                
                st.write("**Nh·∫≠p danh s√°ch c·ªï phi·∫øu (m·ªói m√£ m·ªôt d√≤ng):**")
                stocks_input = st.text_area("Danh s√°ch c·ªï phi·∫øu:", 
                                           placeholder="VCB\nFPT\nVNM\n...", height=200)
                
                submitted = st.form_submit_button("‚úÖ T·∫°o danh m·ª•c")
                
                if submitted:
                    if portfolio_name and stocks_input:
                        # Parse stocks from input
                        stocks = [stock.strip().upper() for stock in stocks_input.split('\n') if stock.strip()]
                        if stocks:
                            portfolio_manager.add_portfolio(portfolio_name, stocks)
                            st.rerun()
                        else:
                            st.error("‚ùå Vui l√≤ng nh·∫≠p √≠t nh·∫•t m·ªôt m√£ c·ªï phi·∫øu!")
                    else:
                        st.error("‚ùå Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß t√™n danh m·ª•c v√† danh s√°ch c·ªï phi·∫øu!")
        
        with tab3:
            st.subheader("‚úèÔ∏è S·ª≠a danh m·ª•c")
            
            portfolio_names = portfolio_manager.get_portfolio_names()
            
            if not portfolio_names:
                st.info("üìù Ch∆∞a c√≥ danh m·ª•c n√†o ƒë·ªÉ s·ª≠a.")
            else:
                selected_portfolio = st.selectbox("Ch·ªçn danh m·ª•c c·∫ßn s·ª≠a:", portfolio_names)
                
                if selected_portfolio:
                    current_stocks = portfolio_manager.get_portfolio_stocks(selected_portfolio)
                    
                    with st.form("edit_portfolio_form"):
                        st.write(f"**S·ª≠a danh m·ª•c: {selected_portfolio}**")
                        
                        # Hi·ªÉn th·ªã danh s√°ch hi·ªán t·∫°i
                        current_stocks_text = '\n'.join(current_stocks)
                        stocks_input = st.text_area("Danh s√°ch c·ªï phi·∫øu (m·ªói m√£ m·ªôt d√≤ng):", 
                                                   value=current_stocks_text, height=200)
                        
                        submitted = st.form_submit_button("üíæ C·∫≠p nh·∫≠t danh m·ª•c")
                        
                        if submitted:
                            if stocks_input:
                                # Parse stocks from input
                                stocks = [stock.strip().upper() for stock in stocks_input.split('\n') if stock.strip()]
                                if stocks:
                                    portfolio_manager.update_portfolio(selected_portfolio, stocks)
                                    st.rerun()
                                else:
                                    st.error("‚ùå Danh m·ª•c kh√¥ng th·ªÉ tr·ªëng!")
                            else:
                                st.error("‚ùå Vui l√≤ng nh·∫≠p danh s√°ch c·ªï phi·∫øu!")
        
        with tab4:
            st.subheader("üóëÔ∏è X√≥a danh m·ª•c")
            
            portfolio_names = portfolio_manager.get_portfolio_names()
            
            if not portfolio_names:
                st.info("üìù Ch∆∞a c√≥ danh m·ª•c n√†o ƒë·ªÉ x√≥a.")
            else:
                selected_portfolio = st.selectbox("Ch·ªçn danh m·ª•c c·∫ßn x√≥a:", [""] + portfolio_names)
                
                if selected_portfolio:
                    stocks = portfolio_manager.get_portfolio_stocks(selected_portfolio)
                    st.warning(f"‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a danh m·ª•c **{selected_portfolio}** v·ªõi {len(stocks)} c·ªï phi·∫øu?")
                    
                    # Hi·ªÉn th·ªã preview
                    with st.expander("Xem tr∆∞·ªõc danh m·ª•c s·∫Ω b·ªã x√≥a"):
                        cols = st.columns(5)
                        for i, stock in enumerate(sorted(stocks)):
                            with cols[i % 5]:
                                st.write(f"‚Ä¢ {stock}")
                    
                    col1, col2 = st.columns(2)
                    with col1:
                        if st.button("üóëÔ∏è X√°c nh·∫≠n x√≥a", type="primary"):
                            portfolio_manager.delete_portfolio(selected_portfolio)
                            st.rerun()
                    with col2:
                        if st.button("‚ùå H·ªßy"):
                            st.rerun()
        
        # Th·ªëng k√™ t·ªïng quan
        st.markdown("---")
        st.subheader("üìä Th·ªëng k√™ t·ªïng quan")
        
        portfolios = portfolio_manager.get_portfolios()
        total_portfolios = len(portfolios)
        total_unique_stocks = len(portfolio_manager.get_all_stocks())
        total_stocks = sum(len(stocks) for stocks in portfolios.values())
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("S·ªë danh m·ª•c", total_portfolios)
        with col2:
            st.metric("T·ªïng s·ªë c·ªï phi·∫øu", total_stocks)
        with col3:
            st.metric("C·ªï phi·∫øu duy nh·∫•t", total_unique_stocks)
            
    except Exception as e:
        st.error(f"‚ùå L·ªói: {str(e)}")

# Main page function for st.Page
render_portfolio_management()
